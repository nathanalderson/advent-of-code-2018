/*
 * This Scala Testsuite was generated by the Gradle 'init' task.
 */
package day17

import org.scalatest.{FunSuite, Matchers}
import org.junit.runner.RunWith
import org.scalatest.junit.JUnitRunner

@RunWith(classOf[JUnitRunner])
class MainSuite extends FunSuite with Matchers {
  val board = Main.parse("""x=495, y=2..7
                           |y=7, x=495..501
                           |x=501, y=3..7
                           |x=498, y=2..4
                           |x=506, y=1..2
                           |x=498, y=10..13
                           |x=504, y=10..13
                           |y=13, x=498..504""".stripMargin.lines.toList)

  val bucketInBucketBoard = Main.parse("""x=495, y=1..7
                                         |y=7, x=495..505
                                         |x=505, y=2..7
                                         |x=498, y=3..5
                                         |x=502, y=3..5
                                         |y=5, x=498..502
                                         |y=9, x=494..506
                                         |""".stripMargin.lines.toList)

//  test("drip") {
//    Main.drip(board).filter(_._2 == NewReachable).keys should
//      contain theSameElementsAs (1 to 6).map(Point(500,_))
//    Main.drip(board.updated(Point(505,0), NewReachable)).filter(_._2 == NewReachable).keys should
//      contain theSameElementsAs (1 to 6).map(Point(500,_)) ++ (1 to 13).map(Point(505,_))
//  }

//  test("spread") {
//    val dripped = Main.drip(board)
//    val str = Main.toString(Main.spread(dripped))
//    str should be (""".....|......
//                     |.....|.....#
//                     |#..#////...#
//                     |#..#~~#.....
//                     |#..#~~#.....
//                     |#~~~~~#.....
//                     |#~~~~~#.....
//                     |#######.....
//                     |............
//                     |............
//                     |...#.....#..
//                     |...#.....#..
//                     |...#.....#..
//                     |...#######..""".stripMargin)
//  }

  test("run") {
    val str = Main.toString(Main.run(board))
    println(str)
    str should be (""".....|......
                     |.....|.....#
                     |#..#||||...#
                     |#..#~~#|....
                     |#..#~~#|....
                     |#~~~~~#|....
                     |#~~~~~#|....
                     |#######|....
                     |.......|....
                     |..|||||||||.
                     |..|#~~~~~#|.
                     |..|#~~~~~#|.
                     |..|#~~~~~#|.
                     |..|#######|.""".stripMargin)
  }

  test("countWaters") {
    Main.countWaters(Main.run(board)) should be (57)
  }

  test("bucket-in-bucket run") {
    val str = Main.toString(Main.run(bucketInBucketBoard))
    println(str)
    str should be ("""......|......
                     |.#|||||||||||
                     |.#~~~~~~~~~#|
                     |.#~~#~~~#~~#|
                     |.#~~#~~~#~~#|
                     |.#~~#####~~#|
                     |.#~~~~~~~~~#|
                     |.###########|
                     ||||||||||||||
                     |#############""".stripMargin)
  }

//  test("bucket-in-bucket spread") {
//    val intermediateBoard = Main.drip(Main.spread(Main.drip(bucketInBucketBoard)))
//    println("*****************************************")
//    val finalBoard = Main.spread(intermediateBoard)
//    val str = Main.toString(finalBoard)
//    println(str)
//    str should be ("""......|......
//                     |.#....|......
//                     |.#./|||||/.#.
//                     |.#~~#~~~#~~#.
//                     |.#~~#~~~#~~#.
//                     |.#~~#####~~#.
//                     |.#~~~~~~~~~#.
//                     |.###########.
//                     |.............
//                     |#############""".stripMargin)
//  }

}
